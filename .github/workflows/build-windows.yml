name: Build and Release for Windows

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*'
    paths:
      - '**/*.go'
      - 'build-windows.yml'

  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            %GOCACHE%
            %GOMODCACHE%
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21.x'

      - name: Set environment variables
        run: |
          echo "GOOS=windows" >> $env:GITHUB_ENV
          echo "GOARCH=amd64" >> $env:GITHUB_ENV

      - name: Build application
        run: go build -o getcourse-video-downloader.exe .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          release_name: Release ${{ github.event.inputs.tag || github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./getcourse-video-downloader.exe
          asset_name: getcourse-video-downloader.exe
          asset_content_type: application/octet-stream
